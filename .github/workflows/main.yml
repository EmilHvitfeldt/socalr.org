name: Render and Deploy socalr.org
'on':  
  push:
    branches:
      - master
  schedule:
    - cron:  '0 */6 * * *'

jobs:
  build:
    runs-on: macOS-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Setup R
        uses: r-lib/actions/setup-r@v1

      - name: Install pandoc and pandoc citeproc
        run: |
          brew install pandoc
          brew install pandoc-citeproc

      - name: Query dependencies
        run: |
          options(repos = 'https://packagemanager.rstudio.com/all/latest')
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ hashFiles('.github/R-version') }}-1-

      - name: Install Package Dependencies
        run: |-
          options(repos = 'https://packagemanager.rstudio.com/all/latest')
          install.packages('remotes')
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}  
      - name: Render Site
        env:
          LAOCRUG_TOKEN: ${{ secrets.LAOCRUG_TOKEN }}
          GOOGLE_MAPS_KEY: ${{ secrets.GOOGLE_MAPS_KEY }}
        run: |-
          Rscript -e "source(here::here('R', 'download_events.R'))" \
                  -e "rmarkdown::render('welcome/index.Rmd')" \
                  -e "distill:::render_website(dir = '.', 'website')" 
          echo "::set-env name=DEPLOY_PATH::$(Rscript -e "cat(rmarkdown::site_config()[['output_dir']])")"
          
      - name: Deploy to Netlify
        if: github.ref == 'refs/heads/master'
        uses: netlify/actions/cli@645ae7398cf5b912a3fa1eb0b88618301aaa85d0
        with:
          args: deploy --dir=$DEPLOY_PATH --prod --site=$NETLIFY_SITE_ID
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
